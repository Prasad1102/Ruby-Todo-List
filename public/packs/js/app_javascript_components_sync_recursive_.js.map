{"version":3,"file":"js/app_javascript_components_sync_recursive_.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AAEA;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAOA;AAAA;AAMA;AAAA;AAAA;AAWA;AAEA;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAeA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAOA;AAEA;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAKA;AAEA;;;;;;;;;;;;;;ACnEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AAAA;AAGA;AACA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AAKA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAMA;AAEA;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AAQA;AAAA;AAEA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AAUA;AAEA;;;;;;;;;;;;;;;;;;;AC9DA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;ACjBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;ACTA;AACA","sources":["webpack://app/./app/javascript/components/ sync ^\\.\\/.*$","webpack://app/./app/javascript/components/Dashboard.jsx","webpack://app/./app/javascript/components/Todos/CompleteTodo.jsx","webpack://app/./app/javascript/components/Todos/DisplayTodo.jsx","webpack://app/./app/javascript/components/Todos/EditTodo.jsx","webpack://app/./app/javascript/components/Todos/Index.jsx","webpack://app/./app/javascript/components/Todos/NewTodo.jsx","webpack://app/./app/javascript/components/Todos/Paginate.jsx","webpack://app/./app/javascript/components/Todos/TodoTable.jsx","webpack://app/./app/javascript/utils/api.js","webpack://app/./app/javascript/utils/axios.js","webpack://app/./app/javascript/components/Todos/Index.module.css?11c2"],"sourcesContent":["var map = {\n\t\"./Dashboard\": \"./app/javascript/components/Dashboard.jsx\",\n\t\"./Dashboard.jsx\": \"./app/javascript/components/Dashboard.jsx\",\n\t\"./Todos/CompleteTodo\": \"./app/javascript/components/Todos/CompleteTodo.jsx\",\n\t\"./Todos/CompleteTodo.jsx\": \"./app/javascript/components/Todos/CompleteTodo.jsx\",\n\t\"./Todos/DisplayTodo\": \"./app/javascript/components/Todos/DisplayTodo.jsx\",\n\t\"./Todos/DisplayTodo.jsx\": \"./app/javascript/components/Todos/DisplayTodo.jsx\",\n\t\"./Todos/EditTodo\": \"./app/javascript/components/Todos/EditTodo.jsx\",\n\t\"./Todos/EditTodo.jsx\": \"./app/javascript/components/Todos/EditTodo.jsx\",\n\t\"./Todos/Index\": \"./app/javascript/components/Todos/Index.jsx\",\n\t\"./Todos/Index.jsx\": \"./app/javascript/components/Todos/Index.jsx\",\n\t\"./Todos/Index.module.css\": \"./app/javascript/components/Todos/Index.module.css\",\n\t\"./Todos/NewTodo\": \"./app/javascript/components/Todos/NewTodo.jsx\",\n\t\"./Todos/NewTodo.jsx\": \"./app/javascript/components/Todos/NewTodo.jsx\",\n\t\"./Todos/Paginate\": \"./app/javascript/components/Todos/Paginate.jsx\",\n\t\"./Todos/Paginate.jsx\": \"./app/javascript/components/Todos/Paginate.jsx\",\n\t\"./Todos/TodoTable\": \"./app/javascript/components/Todos/TodoTable.jsx\",\n\t\"./Todos/TodoTable.jsx\": \"./app/javascript/components/Todos/TodoTable.jsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./app/javascript/components sync recursive ^\\\\.\\\\/.*$\";","import React, { useState, useEffect } from \"react\";\nimport Index from \"./Todos/Index\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport EditTodo from \"./Todos/EditTodo\";\nimport DisplayTodo from \"./Todos/DisplayTodo\";\nimport NewTodo from \"./Todos/NewTodo\";\nimport CompleteTodo from \"./Todos/CompleteTodo\";\n\nconst DashBoard = () => {\n  const [todos, setTodos] = useState([]);\n\n  return (\n    <>\n      <div>\n        <Router>\n          <Routes>\n            <Route path=\"/EditTodo\" element={<EditTodo />} />\n            <Route path=\"/CompleteTodo\" element={<CompleteTodo />} />\n            <Route path=\"/DisplayTodo\" element={<DisplayTodo />} />\n            <Route path=\"/NewTodo\" element={<NewTodo />} />\n            <Route path=\"/\" element={<Index />} />\n          </Routes>\n        </Router>\n      </div>\n    </>\n  );\n};\n\nexport default DashBoard;\n","import React from \"react\";\nimport * as API from \"../../utils/api\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nconst CompleteTodo = () => {\n  const location = useLocation();\n  const completedTodos = location.state?.completed || [];\n\n  const handleDelete = (id) => {\n    API.deleteTodo(id);\n  };\n\n  return (\n    <>\n      <Link to=\"/\">Home</Link>\n      <br />\n      <br />\n      {completedTodos.length > 0 ? (\n        <div>\n          <p>This is Completed Todos from CompletedTodo.jsx</p>\n          {completedTodos.map((todo) => (\n            <div key={todo.id}>\n              <p>ID: {todo.id}</p>\n              <p>Title: {todo.title}</p>\n              <p>Body: {todo.body}</p>\n              <p>Created At: {todo.created_at}</p>\n              <p>Updated At: {todo.updated_at}</p>\n              <Link to=\"/\" onClick={() => handleDelete(todo.id)}>\n                Destroy This Todo{\" \"}\n              </Link>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>No completed todos found</p>\n      )}\n    </>\n  );\n};\n\nexport default CompleteTodo;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nconst DisplayTodo = (props) => {\n  const location = useLocation();\n  const { todos, id } = location.state || {};\n  let { state } = useLocation();\n  console.log(state);\n\n  return (\n    <>\n      {todos && (\n        <div>\n          <p>\n            This is DisplayTodo.jsx{\" \"}\n            {console.log(\"welcome to DisplayTodo.jsx\" + todos, id)}\n          </p>\n          <p>ID: {todos.id}</p>\n          <p>Title: {todos.title}</p>\n          <p>Body: {todos.body}</p>\n          <p>Created At: {todos.created_at}</p>\n          <p>Updated At: {todos.updated_at}</p>\n        </div>\n      )}\n      <Link to=\"/\">Home</Link>\n    </>\n  );\n};\n\nexport default DisplayTodo;\n","import React, { useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport DisplayTodo from \"./DisplayTodo\";\nimport * as API from \"../../utils/api\";\n\nconst EditTodo = (props) => {\n  let { state } = useLocation();\n  console.log(state);\n\n  const [title, setTitle] = useState(state.title);\n\n  const handleTodoUpdate = (e) => {\n    console.log(state.id);\n    API.editTodo(state.id, { title: title });\n    //sending id and title to api\n  };\n\n  const handleInputChange = (event) => {\n    setTitle(event.target.value);\n    console.log(title);\n  };\n\n  return (\n    <div>\n      <form action=\"\">\n        Title{\" \"}\n        <input\n          type=\"text\"\n          id=\"title\"\n          value={title}\n          onChange={handleInputChange}\n        />\n        <Link\n          to=\"/\"\n          onClick={(event) => {\n            handleTodoUpdate(event);\n          }}\n        >\n          Edit Todo\n        </Link>\n      </form>\n    </div>\n  );\n};\n\nexport default EditTodo;\n","import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport TodoTable from \"./TodoTable\";\nimport Paginate from \"./Paginate\";\nimport EditTodo from \"./EditTodo\";\nimport { Link } from \"react-router-dom\";\n\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const perPage = 3;\n\n  useEffect(() => {\n    fetchTodos();\n  }, [currentPage]);\n\n  const fetchTodos = () => {\n    console.log(currentPage, perPage);\n    API.getTodos({ page: currentPage, per_page: perPage })\n      .then((response) => {\n        setTodos(response.data.todos);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <p>{console.log(todos)}</p>\n      <Link to=\"/NewTodo\" className={styles.newTodo}>\n        New Todo\n      </Link>\n\n      <Link\n        to=\"/CompleteTodo\"\n        className={styles.completeTodo}\n        state={{ completed: todos.filter((todo) => todo.completed) }}\n      >\n        Completed Todo\n      </Link>\n\n      <TodoTable todos={todos} setTodos={setTodos}></TodoTable>\n\n      <Paginate\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n        fetchTodos={fetchTodos}\n        todos={todos}\n      />\n    </>\n  );\n};\n\nexport default Index;\n","import React, { useState } from \"react\";\nimport * as API from \"./../../utils/api\";\nimport { Link } from \"react-router-dom\";\nimport Index from \"./Index\";\n\nconst NewTodo = () => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [priority, setPriority] = useState(0);\n\n  const newTodo = {\n    title: title,\n    body: body,\n    priority: priority,\n  };\n\n  const handleTodoCreate = () => {\n    API.createTodo({ todo: newTodo }).then((response) => {\n      console.log(response);\n    });\n  };\n\n  const handleInputTitle = (event) => {\n    setTitle(event.target.value);\n    console.log(title);\n  };\n\n  const handleInputBody = (event) => {\n    setBody(event.target.value);\n    console.log(body);\n  };\n\n  const handlePriorityChange = (event) => {\n    setPriority(event.target.value);\n    console.log(priority);\n  };\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        id=\"title\"\n        value={title}\n        onChange={handleInputTitle}\n        placeholder=\"Title :\"\n      />\n      <input\n        type=\"text\"\n        id=\"body\"\n        value={body}\n        onChange={handleInputBody}\n        placeholder=\"Body :\"\n      />\n      <input\n        type=\"number\"\n        id=\"priority\"\n        value={priority}\n        onChange={handlePriorityChange}\n        placeholder=\"Priority :\"\n      />\n      <Link to=\"/\" onClick={handleTodoCreate}>\n        Add Todo\n      </Link>\n    </>\n  );\n};\n\nexport default NewTodo;\n","import React, { useState } from \"react\";\n\nconst Paginate = ({ currentPage, setCurrentPage, fetchTodos, todos }) => {\n  const [pageInput, setPageInput] = useState(1);\n  const changePage = (page) => {\n    if (page >= 1 && todos.length > 0) {\n      setCurrentPage(page);\n      fetchTodos();\n    }\n  };\n\n  const handlePageInput = (event) => {\n    setPageInput(event.target.value);\n  };\n\n  return (\n    <>\n      <div>\n        <button onClick={() => changePage(currentPage - 1)}>Prev</button>\n        ...\n        <button\n          onClick={() => {\n            changePage(1);\n          }}\n        >\n          1\n        </button>\n        <button\n          onClick={() => {\n            changePage(2);\n          }}\n        >\n          2\n        </button>\n        <button\n          onClick={() => {\n            changePage(3);\n          }}\n        >\n          3\n        </button>\n        ...\n        <button onClick={() => changePage(currentPage + 1)}>Next</button>\n      </div>\n      <input\n        type=\"number\"\n        value={pageInput}\n        placeholder=\"Enter a Page Number to Check\"\n        onChange={handlePageInput}\n      />\n      <button\n        onClick={() => {\n          changePage(pageInput);\n        }}\n      >\n        Submit\n      </button>\n    </>\n  );\n};\n\nexport default Paginate;\n","import React from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport EditTodo from \"./EditTodo\";\nimport DisplayTodo from \"./DisplayTodo\";\nimport { Link } from \"react-router-dom\";\n\nconst TodoTable = ({ todos, setTodos }) => {\n  const handleCheckBoxChange = (id, checked) => {\n    API.editTodo(id, { completed: checked }).then((response) => {\n      setTodos((prevTodos) =>\n        prevTodos.map((todo) =>\n          todo.id === id ? { ...todo, completed: checked } : todo\n        )\n      );\n    });\n  };\n\n  return (\n    <>\n      <table className={styles.table}>\n        <thead className={styles.tablehead}>\n          <tr>\n            <th>Id</th>\n            <th>Title</th>\n            <th>Buttons</th>\n            <th>Priority</th>\n          </tr>\n        </thead>\n        <tbody className={styles.tablebody}>\n          {todos.map((todo) => (\n            <tr key={todo.id}>\n              <td>{todo.id}</td>\n              <td>{todo.title}</td>\n              <td>\n                <Link\n                  to=\"/EditTodo\"\n                  styles={{ \"text-decoration\": \"linethrough\" }}\n                  state={{ id: todo.id, title: todo.title }}\n                >\n                  Edit_{\" \"}\n                </Link>\n                <Link to=\"/DisplayTodo\" state={{ todos: todo, id: todo.id }}>\n                  Display_\n                </Link>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  onChange={(e) =>\n                    handleCheckBoxChange(todo.id, e.target.checked)\n                  }\n                />\n              </td>\n              <td>{todo.priority}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default TodoTable;\n","import axios from './axios';\n\nexport const getTodos = (params) => {\n  console.log(\"params\", params)\n  return axios.get('/todos', {params})\n}\n\nexport const deleteTodo = (id) =>{\n  return axios.delete(`/todos/${id}`);\n}\n\nexport const editTodo = (id, params) =>{\n  return axios.put(`/todos/${id}`, { todo: params });\n}\n\nexport const createTodo = (params) => {\n  return axios.post('/todos', params)\n};","const axios = require(\"axios\");\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:3000',\n  headers: {\n    'Accept': \"application/json\"\n  }\n});\n\nexport default instance;","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"TNFt4qC17jnOTldN2cMW\",\"completeTodo\":\"P45HOSnnem4fgW2JX_Rx\"};"],"names":[],"sourceRoot":""}