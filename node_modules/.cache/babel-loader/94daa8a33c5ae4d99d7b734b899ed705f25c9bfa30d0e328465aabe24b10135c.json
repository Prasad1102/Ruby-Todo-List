{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport NewTodo from \"./NewTodo\";\nimport EditTodo from \"./EditTodo\";\nimport DisplayTodo from \"./DisplayTodo\";\nimport { Link } from \"react-router-dom\";\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = () => {\n    API.getTodos().then(response => {\n      setTodos(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  const handleDelete = id => {\n    API.deleteTodo(id).then(() => {\n      fetchTodos();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  const handleCheckBoxChange = (id, checked) => {\n    API.editTodo(id, {\n      completed: checked\n    }).then(() => {\n      fetchTodos(); // Refresh todos after updating completion status\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    className: styles.table\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: styles.tablehead\n  }, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", null, \"Id\"), /*#__PURE__*/React.createElement(\"th\", null, \"Title\"), /*#__PURE__*/React.createElement(\"th\", null, \"Buttons\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: styles.tablebody\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"tr\", {\n    key: todo.id\n  }, /*#__PURE__*/React.createElement(\"td\", null, todo.id), /*#__PURE__*/React.createElement(\"td\", null, todo.title), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(Link, {\n    to: `/EditTodo?id=${todo.id}&title=${todo.title}`\n  }, \"Edit_\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: todo.completed,\n    onChange: e => handleCheckBoxChange(todo.id, e.target.checked)\n  })))))));\n};\nexport default Index;","map":{"version":3,"names":["React","useEffect","useState","API","styles","NewTodo","EditTodo","DisplayTodo","Link","Index","todos","setTodos","editingTodoId","setEditingTodoId","fetchTodos","getTodos","then","response","data","catch","error","console","log","handleDelete","id","deleteTodo","handleCheckBoxChange","checked","editTodo","completed","createElement","Fragment","className","table","tablehead","tablebody","map","todo","key","title","to","type","onChange","e","target"],"sources":["/home/prasad/Ruby/BlogApp/app/javascript/components/Todos/Index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport NewTodo from \"./NewTodo\";\nimport EditTodo from \"./EditTodo\";\nimport DisplayTodo from \"./DisplayTodo\";\nimport { Link } from \"react-router-dom\";\n\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    API.getTodos()\n      .then((response) => {\n        setTodos(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleDelete = (id) => {\n    API.deleteTodo(id)\n      .then(() => {\n        fetchTodos();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleCheckBoxChange = (id, checked) => {\n    API.editTodo(id, { completed: checked })\n      .then(() => {\n        fetchTodos(); // Refresh todos after updating completion status\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      {/* Other JSX elements */}\n      <table className={styles.table}>\n        <thead className={styles.tablehead}>\n          <tr>\n            <th>Id</th>\n            <th>Title</th>\n            <th>Buttons</th>\n          </tr>\n        </thead>\n        <tbody className={styles.tablebody}>\n          {todos.map((todo) => (\n            <tr key={todo.id}>\n              <td>{todo.id}</td>\n              <td>{todo.title}</td>\n              <td>\n                <Link to={`/EditTodo?id=${todo.id}&title=${todo.title}`}>\n                  Edit_\n                </Link>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  onChange={(e) =>\n                    handleCheckBoxChange(todo.id, e.target.checked)\n                  }\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Index;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}