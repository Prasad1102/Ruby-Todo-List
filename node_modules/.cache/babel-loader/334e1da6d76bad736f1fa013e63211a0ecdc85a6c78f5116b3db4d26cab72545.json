{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport EditTodo from \"./EditTodo\";\nimport { Link } from \"react-router-dom\";\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const [state, setState] = useState({\n    todos: [],\n    perPage: 3,\n    page: 1\n  });\n  useEffect(() => {\n    fetchTodos();\n  }, [state.page]);\n  const fetchTodos = () => {\n    API.getTodos({\n      page: state.page,\n      per_page: state.perPage\n    }).then(response => {\n      setTodos(response.data);\n      setState(prevState => {\n        return {\n          ...prevState,\n          // Spread operator used to retain previous state\n          todos: response.data // Updating 'todos' property in the state with new data from response\n        };\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  const changePage = page => {\n    setState(prevState => {\n      return {\n        ...prevState,\n        // Spread operator used to retain previous state\n        page: page // Updating 'todos' property in the state with new data from response\n      };\n    });\n  };\n  const handleCheckBoxChange = (id, checked) => {\n    API.editTodo(id, {\n      completed: checked\n    }).then(response => {\n      setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? {\n        ...todo,\n        completed: checked\n      } : todo));\n    });\n  };\n  const totalPages = Math.ceil(todos.length / state.perPage);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, console.log(todos)), /*#__PURE__*/React.createElement(Link, {\n    to: \"/NewTodo\",\n    className: styles.newTodo\n  }, \"New Todo\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/CompleteTodo\",\n    className: styles.completeTodo,\n    state: {\n      completed: todos.filter(todo => todo.completed)\n    }\n  }, \"Completed Todo\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: styles.table\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: styles.tablehead\n  }, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", null, \"Id\"), /*#__PURE__*/React.createElement(\"th\", null, \"Title\"), /*#__PURE__*/React.createElement(\"th\", null, \"Buttons\"), /*#__PURE__*/React.createElement(\"th\", null, \"Priority\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: styles.tablebody\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"tr\", {\n    key: todo.id\n  }, /*#__PURE__*/React.createElement(\"td\", null, todo.id), /*#__PURE__*/React.createElement(\"td\", null, todo.title), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/EditTodo\",\n    styles: {\n      \"text-decoration\": \"linethrough\"\n    },\n    state: {\n      id: todo.id,\n      title: todo.title\n    }\n  }, \"Edit_\", \" \"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/DisplayTodo\",\n    state: {\n      todos: todo,\n      id: todo.id\n    }\n  }, \"Display_\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: todo.completed,\n    onChange: e => handleCheckBoxChange(todo.id, e.target.checked)\n  })), /*#__PURE__*/React.createElement(\"td\", null, todo.priority))))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      changePage(state.page + 1);\n    }\n  }, \"Next\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      changePage(state.page - 1);\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (state.page > 1) {\n        changePage(state.page - 1);\n      }\n    }\n  }, \"Prev\"), Array.from({\n    length: totalPages\n  }, (_, i) => i + 1).map(pageNum => /*#__PURE__*/React.createElement(\"button\", {\n    key: pageNum,\n    onClick: () => {\n      changePage(pageNum);\n    },\n    disabled: pageNum === state.page\n  }, pageNum)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (state.page < totalPages) {\n        changePage(state.page + 1);\n      }\n    }\n  }, \"Next\")));\n};\nexport default Index;","map":{"version":3,"names":["React","useEffect","useState","API","styles","EditTodo","Link","Index","todos","setTodos","state","setState","perPage","page","fetchTodos","getTodos","per_page","then","response","data","prevState","catch","error","console","log","changePage","handleCheckBoxChange","id","checked","editTodo","completed","prevTodos","map","todo","totalPages","Math","ceil","length","createElement","Fragment","to","className","newTodo","completeTodo","filter","table","tablehead","tablebody","key","title","type","onChange","e","target","priority","onClick","Array","from","_","i","pageNum","disabled"],"sources":["/home/prasad/Ruby/BlogApp/app/javascript/components/Todos/Index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport EditTodo from \"./EditTodo\";\nimport { Link } from \"react-router-dom\";\n\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const [state, setState] = useState({ todos: [], perPage: 3, page: 1 });\n\n  useEffect(() => {\n    fetchTodos();\n  }, [state.page]);\n\n  const fetchTodos = () => {\n    API.getTodos({ page: state.page, per_page: state.perPage })\n      .then((response) => {\n        setTodos(response.data);\n        setState((prevState) => {\n          return {\n            ...prevState, // Spread operator used to retain previous state\n            todos: response.data, // Updating 'todos' property in the state with new data from response\n          };\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const changePage = (page) => {\n    setState((prevState) => {\n      return {\n        ...prevState, // Spread operator used to retain previous state\n        page: page, // Updating 'todos' property in the state with new data from response\n      };\n    });\n  };\n\n  const handleCheckBoxChange = (id, checked) => {\n    API.editTodo(id, { completed: checked }).then((response) => {\n      setTodos((prevTodos) =>\n        prevTodos.map((todo) =>\n          todo.id === id ? { ...todo, completed: checked } : todo\n        )\n      );\n    });\n  };\n\n  const totalPages = Math.ceil(todos.length / state.perPage);\n\n  return (\n    <>\n      <p>{console.log(todos)}</p>\n      <Link to=\"/NewTodo\" className={styles.newTodo}>\n        New Todo\n      </Link>\n\n      <Link\n        to=\"/CompleteTodo\"\n        className={styles.completeTodo}\n        state={{ completed: todos.filter((todo) => todo.completed) }}\n      >\n        Completed Todo\n      </Link>\n\n      <table className={styles.table}>\n        <thead className={styles.tablehead}>\n          <tr>\n            <th>Id</th>\n            <th>Title</th>\n            <th>Buttons</th>\n            <th>Priority</th>\n          </tr>\n        </thead>\n        <tbody className={styles.tablebody}>\n          {todos.map((todo) => (\n            <tr key={todo.id}>\n              <td>{todo.id}</td>\n              <td>{todo.title}</td>\n              <td>\n                <Link\n                  to=\"/EditTodo\"\n                  styles={{ \"text-decoration\": \"linethrough\" }}\n                  state={{ id: todo.id, title: todo.title }}\n                >\n                  Edit_{\" \"}\n                </Link>\n                <Link to=\"/DisplayTodo\" state={{ todos: todo, id: todo.id }}>\n                  Display_\n                </Link>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  onChange={(e) =>\n                    handleCheckBoxChange(todo.id, e.target.checked)\n                  }\n                />\n              </td>\n              <td>{todo.priority}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button\n        onClick={() => {\n          changePage(state.page + 1);\n        }}\n      >\n        Next\n      </button>\n      <button\n        onClick={() => {\n          changePage(state.page - 1);\n        }}\n      >\n        Prev\n      </button>\n\n      <div>\n        <button\n          onClick={() => {\n            if (state.page > 1) {\n              changePage(state.page - 1);\n            }\n          }}\n        >\n          Prev\n        </button>\n        {Array.from({ length: totalPages }, (_, i) => i + 1).map((pageNum) => (\n          <button\n            key={pageNum}\n            onClick={() => {\n              changePage(pageNum);\n            }}\n            disabled={pageNum === state.page}\n          >\n            {pageNum}\n          </button>\n        ))}\n        <button\n          onClick={() => {\n            if (state.page < totalPages) {\n              changePage(state.page + 1);\n            }\n          }}\n        >\n          Next\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Index;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,KAAKC,GAAG,MAAM,iBAAiB;AACtC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC;IAAEM,KAAK,EAAE,EAAE;IAAEI,OAAO,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAE,CAAC,CAAC;EAEtEZ,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,KAAK,CAACG,IAAI,CAAC,CAAC;EAEhB,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBX,GAAG,CAACY,QAAQ,CAAC;MAAEF,IAAI,EAAEH,KAAK,CAACG,IAAI;MAAEG,QAAQ,EAAEN,KAAK,CAACE;IAAQ,CAAC,CAAC,CACxDK,IAAI,CAAEC,QAAQ,IAAK;MAClBT,QAAQ,CAACS,QAAQ,CAACC,IAAI,CAAC;MACvBR,QAAQ,CAAES,SAAS,IAAK;QACtB,OAAO;UACL,GAAGA,SAAS;UAAE;UACdZ,KAAK,EAAEU,QAAQ,CAACC,IAAI,CAAE;QACxB,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC,CACDE,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAED,MAAMG,UAAU,GAAIZ,IAAI,IAAK;IAC3BF,QAAQ,CAAES,SAAS,IAAK;MACtB,OAAO;QACL,GAAGA,SAAS;QAAE;QACdP,IAAI,EAAEA,IAAI,CAAE;MACd,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAMa,oBAAoB,GAAGA,CAACC,EAAE,EAAEC,OAAO,KAAK;IAC5CzB,GAAG,CAAC0B,QAAQ,CAACF,EAAE,EAAE;MAAEG,SAAS,EAAEF;IAAQ,CAAC,CAAC,CAACX,IAAI,CAAEC,QAAQ,IAAK;MAC1DT,QAAQ,CAAEsB,SAAS,IACjBA,SAAS,CAACC,GAAG,CAAEC,IAAI,IACjBA,IAAI,CAACN,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGM,IAAI;QAAEH,SAAS,EAAEF;MAAQ,CAAC,GAAGK,IACrD,CACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAAC5B,KAAK,CAAC6B,MAAM,GAAG3B,KAAK,CAACE,OAAO,CAAC;EAE1D,oBACEZ,KAAA,CAAAsC,aAAA,CAAAtC,KAAA,CAAAuC,QAAA,qBACEvC,KAAA,CAAAsC,aAAA,YAAIf,OAAO,CAACC,GAAG,CAAChB,KAAK,CAAK,CAAC,eAC3BR,KAAA,CAAAsC,aAAA,CAAChC,IAAI;IAACkC,EAAE,EAAC,UAAU;IAACC,SAAS,EAAErC,MAAM,CAACsC;EAAQ,GAAC,UAEzC,CAAC,eAEP1C,KAAA,CAAAsC,aAAA,CAAChC,IAAI;IACHkC,EAAE,EAAC,eAAe;IAClBC,SAAS,EAAErC,MAAM,CAACuC,YAAa;IAC/BjC,KAAK,EAAE;MAAEoB,SAAS,EAAEtB,KAAK,CAACoC,MAAM,CAAEX,IAAI,IAAKA,IAAI,CAACH,SAAS;IAAE;EAAE,GAC9D,gBAEK,CAAC,eAEP9B,KAAA,CAAAsC,aAAA;IAAOG,SAAS,EAAErC,MAAM,CAACyC;EAAM,gBAC7B7C,KAAA,CAAAsC,aAAA;IAAOG,SAAS,EAAErC,MAAM,CAAC0C;EAAU,gBACjC9C,KAAA,CAAAsC,aAAA,0BACEtC,KAAA,CAAAsC,aAAA,aAAI,IAAM,CAAC,eACXtC,KAAA,CAAAsC,aAAA,aAAI,OAAS,CAAC,eACdtC,KAAA,CAAAsC,aAAA,aAAI,SAAW,CAAC,eAChBtC,KAAA,CAAAsC,aAAA,aAAI,UAAY,CACd,CACC,CAAC,eACRtC,KAAA,CAAAsC,aAAA;IAAOG,SAAS,EAAErC,MAAM,CAAC2C;EAAU,GAChCvC,KAAK,CAACwB,GAAG,CAAEC,IAAI,iBACdjC,KAAA,CAAAsC,aAAA;IAAIU,GAAG,EAAEf,IAAI,CAACN;EAAG,gBACf3B,KAAA,CAAAsC,aAAA,aAAKL,IAAI,CAACN,EAAO,CAAC,eAClB3B,KAAA,CAAAsC,aAAA,aAAKL,IAAI,CAACgB,KAAU,CAAC,eACrBjD,KAAA,CAAAsC,aAAA,0BACEtC,KAAA,CAAAsC,aAAA,CAAChC,IAAI;IACHkC,EAAE,EAAC,WAAW;IACdpC,MAAM,EAAE;MAAE,iBAAiB,EAAE;IAAc,CAAE;IAC7CM,KAAK,EAAE;MAAEiB,EAAE,EAAEM,IAAI,CAACN,EAAE;MAAEsB,KAAK,EAAEhB,IAAI,CAACgB;IAAM;EAAE,GAC3C,OACM,EAAC,GACF,CAAC,eACPjD,KAAA,CAAAsC,aAAA,CAAChC,IAAI;IAACkC,EAAE,EAAC,cAAc;IAAC9B,KAAK,EAAE;MAAEF,KAAK,EAAEyB,IAAI;MAAEN,EAAE,EAAEM,IAAI,CAACN;IAAG;EAAE,GAAC,UAEvD,CAAC,eACP3B,KAAA,CAAAsC,aAAA;IACEY,IAAI,EAAC,UAAU;IACftB,OAAO,EAAEK,IAAI,CAACH,SAAU;IACxBqB,QAAQ,EAAGC,CAAC,IACV1B,oBAAoB,CAACO,IAAI,CAACN,EAAE,EAAEyB,CAAC,CAACC,MAAM,CAACzB,OAAO;EAC/C,CACF,CACC,CAAC,eACL5B,KAAA,CAAAsC,aAAA,aAAKL,IAAI,CAACqB,QAAa,CACrB,CACL,CACI,CACF,CAAC,eACRtD,KAAA,CAAAsC,aAAA;IACEiB,OAAO,EAAEA,CAAA,KAAM;MACb9B,UAAU,CAACf,KAAK,CAACG,IAAI,GAAG,CAAC,CAAC;IAC5B;EAAE,GACH,MAEO,CAAC,eACTb,KAAA,CAAAsC,aAAA;IACEiB,OAAO,EAAEA,CAAA,KAAM;MACb9B,UAAU,CAACf,KAAK,CAACG,IAAI,GAAG,CAAC,CAAC;IAC5B;EAAE,GACH,MAEO,CAAC,eAETb,KAAA,CAAAsC,aAAA,2BACEtC,KAAA,CAAAsC,aAAA;IACEiB,OAAO,EAAEA,CAAA,KAAM;MACb,IAAI7C,KAAK,CAACG,IAAI,GAAG,CAAC,EAAE;QAClBY,UAAU,CAACf,KAAK,CAACG,IAAI,GAAG,CAAC,CAAC;MAC5B;IACF;EAAE,GACH,MAEO,CAAC,EACR2C,KAAK,CAACC,IAAI,CAAC;IAAEpB,MAAM,EAAEH;EAAW,CAAC,EAAE,CAACwB,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAAC3B,GAAG,CAAE4B,OAAO,iBAC/D5D,KAAA,CAAAsC,aAAA;IACEU,GAAG,EAAEY,OAAQ;IACbL,OAAO,EAAEA,CAAA,KAAM;MACb9B,UAAU,CAACmC,OAAO,CAAC;IACrB,CAAE;IACFC,QAAQ,EAAED,OAAO,KAAKlD,KAAK,CAACG;EAAK,GAEhC+C,OACK,CACT,CAAC,eACF5D,KAAA,CAAAsC,aAAA;IACEiB,OAAO,EAAEA,CAAA,KAAM;MACb,IAAI7C,KAAK,CAACG,IAAI,GAAGqB,UAAU,EAAE;QAC3BT,UAAU,CAACf,KAAK,CAACG,IAAI,GAAG,CAAC,CAAC;MAC5B;IACF;EAAE,GACH,MAEO,CACL,CACL,CAAC;AAEP,CAAC;AAED,eAAeN,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}