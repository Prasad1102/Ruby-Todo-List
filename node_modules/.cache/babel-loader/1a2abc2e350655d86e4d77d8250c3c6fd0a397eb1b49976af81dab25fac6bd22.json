{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport TodoTable from \"./TodoTable\";\nimport Paginate from \"./Paginate\";\nimport EditTodo from \"./EditTodo\";\nimport { Link } from \"react-router-dom\";\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const perPage = 3;\n  useEffect(() => {\n    fetchTodos();\n  }, [currentPage]);\n  const fetchTodos = () => {\n    console.log(currentPage, perPage);\n    API.getTodos({\n      page: currentPage,\n      per_page: perPage\n    }).then(response => {\n      setTodos(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  const handleCheckBoxChange = (id, checked) => {\n    API.editTodo(id, {\n      completed: checked\n    }).then(response => {\n      setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? {\n        ...todo,\n        completed: checked\n      } : todo));\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, console.log(todos)), /*#__PURE__*/React.createElement(Link, {\n    to: \"/NewTodo\",\n    className: styles.newTodo\n  }, \"New Todo\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/CompleteTodo\",\n    className: styles.completeTodo,\n    state: {\n      completed: todos.filter(todo => todo.completed)\n    }\n  }, \"Completed Todo\"), /*#__PURE__*/React.createElement(TodoTable, {\n    todos: todos\n  }), /*#__PURE__*/React.createElement(Paginate, {\n    currentPage: currentPage,\n    setCurrentPage: setCurrentPage,\n    fetchTodos: fetchTodos,\n    todos: todos\n  }));\n};\nexport default Index;","map":{"version":3,"names":["React","useEffect","useState","API","styles","TodoTable","Paginate","EditTodo","Link","Index","todos","setTodos","currentPage","setCurrentPage","perPage","fetchTodos","console","log","getTodos","page","per_page","then","response","data","catch","error","handleCheckBoxChange","id","checked","editTodo","completed","prevTodos","map","todo","createElement","Fragment","to","className","newTodo","completeTodo","state","filter"],"sources":["/home/prasad/Ruby/BlogApp/app/javascript/components/Todos/Index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport TodoTable from \"./TodoTable\";\nimport Paginate from \"./Paginate\";\nimport EditTodo from \"./EditTodo\";\nimport { Link } from \"react-router-dom\";\n\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const perPage = 3;\n\n  useEffect(() => {\n    fetchTodos();\n  }, [currentPage]);\n\n  const fetchTodos = () => {\n    console.log(currentPage, perPage);\n    API.getTodos({ page: currentPage, per_page: perPage })\n      .then((response) => {\n        setTodos(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleCheckBoxChange = (id, checked) => {\n    API.editTodo(id, { completed: checked }).then((response) => {\n      setTodos((prevTodos) =>\n        prevTodos.map((todo) =>\n          todo.id === id ? { ...todo, completed: checked } : todo\n        )\n      );\n    });\n  };\n\n  return (\n    <>\n      <p>{console.log(todos)}</p>\n      <Link to=\"/NewTodo\" className={styles.newTodo}>\n        New Todo\n      </Link>\n      <Link\n        to=\"/CompleteTodo\"\n        className={styles.completeTodo}\n        state={{ completed: todos.filter((todo) => todo.completed) }}\n      >\n        Completed Todo\n      </Link>\n      <TodoTable todos={todos} />\n      <Paginate\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n        fetchTodos={fetchTodos}\n        todos={todos}\n      />\n    </>\n  );\n};\n\nexport default Index;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,KAAKC,GAAG,MAAM,iBAAiB;AACtC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMY,OAAO,GAAG,CAAC;EAEjBb,SAAS,CAAC,MAAM;IACdc,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACH,WAAW,CAAC,CAAC;EAEjB,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvBC,OAAO,CAACC,GAAG,CAACL,WAAW,EAAEE,OAAO,CAAC;IACjCX,GAAG,CAACe,QAAQ,CAAC;MAAEC,IAAI,EAAEP,WAAW;MAAEQ,QAAQ,EAAEN;IAAQ,CAAC,CAAC,CACnDO,IAAI,CAAEC,QAAQ,IAAK;MAClBX,QAAQ,CAACW,QAAQ,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAACC,EAAE,EAAEC,OAAO,KAAK;IAC5CzB,GAAG,CAAC0B,QAAQ,CAACF,EAAE,EAAE;MAAEG,SAAS,EAAEF;IAAQ,CAAC,CAAC,CAACP,IAAI,CAAEC,QAAQ,IAAK;MAC1DX,QAAQ,CAAEoB,SAAS,IACjBA,SAAS,CAACC,GAAG,CAAEC,IAAI,IACjBA,IAAI,CAACN,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGM,IAAI;QAAEH,SAAS,EAAEF;MAAQ,CAAC,GAAGK,IACrD,CACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,oBACEjC,KAAA,CAAAkC,aAAA,CAAAlC,KAAA,CAAAmC,QAAA,qBACEnC,KAAA,CAAAkC,aAAA,YAAIlB,OAAO,CAACC,GAAG,CAACP,KAAK,CAAK,CAAC,eAC3BV,KAAA,CAAAkC,aAAA,CAAC1B,IAAI;IAAC4B,EAAE,EAAC,UAAU;IAACC,SAAS,EAAEjC,MAAM,CAACkC;EAAQ,GAAC,UAEzC,CAAC,eACPtC,KAAA,CAAAkC,aAAA,CAAC1B,IAAI;IACH4B,EAAE,EAAC,eAAe;IAClBC,SAAS,EAAEjC,MAAM,CAACmC,YAAa;IAC/BC,KAAK,EAAE;MAAEV,SAAS,EAAEpB,KAAK,CAAC+B,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACH,SAAS;IAAE;EAAE,GAC9D,gBAEK,CAAC,eACP9B,KAAA,CAAAkC,aAAA,CAAC7B,SAAS;IAACK,KAAK,EAAEA;EAAM,CAAE,CAAC,eAC3BV,KAAA,CAAAkC,aAAA,CAAC5B,QAAQ;IACPM,WAAW,EAAEA,WAAY;IACzBC,cAAc,EAAEA,cAAe;IAC/BE,UAAU,EAAEA,UAAW;IACvBL,KAAK,EAAEA;EAAM,CACd,CACD,CAAC;AAEP,CAAC;AAED,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}