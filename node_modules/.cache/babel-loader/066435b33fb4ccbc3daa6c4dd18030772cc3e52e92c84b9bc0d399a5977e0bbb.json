{"ast":null,"code":"import React from \"react\";\nimport * as API from \"../../utils/api\";\nimport { useLocation } from \"react-router-dom\";\nconst CompleteTodo = () => {\n  const location = useLocation();\n  const completedTodos = location.state?.completed || [];\n  const handleDelete = id => {\n    API.deleteTodo(id).then(() => {\n      // If you want to refresh the list after deletion, you may re-fetch the updated todos here.\n      // fetchTodos(); // Example if you have a fetchTodos function to get the updated list\n      console.log(`Todo with ID ${id} deleted successfully.`);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, completedTodos.length > 0 ? /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"p\", null, \"This is Completed Todos from CompletedTodo.jsx\"), completedTodos.map(todo => /*#__PURE__*/React.createElement(\"div\", {\n    key: todo.id\n  }, /*#__PURE__*/React.createElement(\"p\", null, \"ID: \", todo.id), /*#__PURE__*/React.createElement(\"p\", null, \"Title: \", todo.title), /*#__PURE__*/React.createElement(\"p\", null, \"Body: \", todo.body), /*#__PURE__*/React.createElement(\"p\", null, \"Created At: \", todo.created_at), /*#__PURE__*/React.createElement(\"p\", null, \"Updated At: \", todo.updated_at), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDelete(todo.id)\n  }, \"Delete \")))) : /*#__PURE__*/React.createElement(\"p\", null, \"No completed todos found\"));\n};\nexport default CompleteTodo;","map":{"version":3,"names":["React","API","useLocation","CompleteTodo","location","completedTodos","state","completed","handleDelete","id","deleteTodo","then","console","log","catch","error","createElement","Fragment","length","map","todo","key","title","body","created_at","updated_at","onClick"],"sources":["/home/prasad/Ruby/BlogApp/app/javascript/components/Todos/CompleteTodo.jsx"],"sourcesContent":["import React from \"react\";\nimport * as API from \"../../utils/api\";\nimport { useLocation } from \"react-router-dom\";\n\nconst CompleteTodo = () => {\n  const location = useLocation();\n  const completedTodos = location.state?.completed || [];\n\n  const handleDelete = (id) => {\n    API.deleteTodo(id)\n      .then(() => {\n        // If you want to refresh the list after deletion, you may re-fetch the updated todos here.\n        // fetchTodos(); // Example if you have a fetchTodos function to get the updated list\n        console.log(`Todo with ID ${id} deleted successfully.`);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      {completedTodos.length > 0 ? (\n        <div>\n          <p>This is Completed Todos from CompletedTodo.jsx</p>\n          {completedTodos.map((todo) => (\n            <div key={todo.id}>\n              <p>ID: {todo.id}</p>\n              <p>Title: {todo.title}</p>\n              <p>Body: {todo.body}</p>\n              <p>Created At: {todo.created_at}</p>\n              <p>Updated At: {todo.updated_at}</p>\n              <button onClick={() => handleDelete(todo.id)}>Delete </button>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>No completed todos found</p>\n      )}\n    </>\n  );\n};\n\nexport default CompleteTodo;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,GAAG,MAAM,iBAAiB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,MAAMC,QAAQ,GAAGF,WAAW,CAAC,CAAC;EAC9B,MAAMG,cAAc,GAAGD,QAAQ,CAACE,KAAK,EAAEC,SAAS,IAAI,EAAE;EAEtD,MAAMC,YAAY,GAAIC,EAAE,IAAK;IAC3BR,GAAG,CAACS,UAAU,CAACD,EAAE,CAAC,CACfE,IAAI,CAAC,MAAM;MACV;MACA;MACAC,OAAO,CAACC,GAAG,CAAE,gBAAeJ,EAAG,wBAAuB,CAAC;IACzD,CAAC,CAAC,CACDK,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAED,oBACEf,KAAA,CAAAgB,aAAA,CAAAhB,KAAA,CAAAiB,QAAA,QACGZ,cAAc,CAACa,MAAM,GAAG,CAAC,gBACxBlB,KAAA,CAAAgB,aAAA,2BACEhB,KAAA,CAAAgB,aAAA,YAAG,gDAAiD,CAAC,EACpDX,cAAc,CAACc,GAAG,CAAEC,IAAI,iBACvBpB,KAAA,CAAAgB,aAAA;IAAKK,GAAG,EAAED,IAAI,CAACX;EAAG,gBAChBT,KAAA,CAAAgB,aAAA,YAAG,MAAI,EAACI,IAAI,CAACX,EAAM,CAAC,eACpBT,KAAA,CAAAgB,aAAA,YAAG,SAAO,EAACI,IAAI,CAACE,KAAS,CAAC,eAC1BtB,KAAA,CAAAgB,aAAA,YAAG,QAAM,EAACI,IAAI,CAACG,IAAQ,CAAC,eACxBvB,KAAA,CAAAgB,aAAA,YAAG,cAAY,EAACI,IAAI,CAACI,UAAc,CAAC,eACpCxB,KAAA,CAAAgB,aAAA,YAAG,cAAY,EAACI,IAAI,CAACK,UAAc,CAAC,eACpCzB,KAAA,CAAAgB,aAAA;IAAQU,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAACY,IAAI,CAACX,EAAE;EAAE,GAAC,SAAe,CAC1D,CACN,CACE,CAAC,gBAENT,KAAA,CAAAgB,aAAA,YAAG,0BAA2B,CAEhC,CAAC;AAEP,CAAC;AAED,eAAeb,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}