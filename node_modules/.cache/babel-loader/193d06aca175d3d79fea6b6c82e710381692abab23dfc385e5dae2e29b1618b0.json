{"ast":null,"code":"import React from \"react\";\nimport styles from \"./Index.module.css\";\nimport EditTodo from \"./EditTodo\";\nimport DisplayTodo from \"./DisplayTodo\";\nimport { Link } from \"react-router-dom\";\nconst TodoTable = ({\n  todos,\n  setTodos\n}) => {\n  const handleCheckBoxChange = (id, checked) => {\n    API.editTodo(id, {\n      completed: checked\n    }).then(response => {\n      setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? {\n        ...todo,\n        completed: checked\n      } : todo));\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    className: styles.table\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: styles.tablehead\n  }, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", null, \"Id\"), /*#__PURE__*/React.createElement(\"th\", null, \"Title\"), /*#__PURE__*/React.createElement(\"th\", null, \"Buttons\"), /*#__PURE__*/React.createElement(\"th\", null, \"Priority\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: styles.tablebody\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"tr\", {\n    key: todo.id\n  }, /*#__PURE__*/React.createElement(\"td\", null, todo.id), /*#__PURE__*/React.createElement(\"td\", null, todo.title), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/EditTodo\",\n    styles: {\n      \"text-decoration\": \"linethrough\"\n    },\n    state: {\n      id: todo.id,\n      title: todo.title\n    }\n  }, \"Edit_\", \" \"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/DisplayTodo\",\n    state: {\n      todos: todo,\n      id: todo.id\n    }\n  }, \"Display_\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: todo.completed,\n    onChange: e => handleCheckBoxChange(todo.id, e.target.checked)\n  })), /*#__PURE__*/React.createElement(\"td\", null, todo.priority))))));\n};\nexport default TodoTable;","map":{"version":3,"names":["React","styles","EditTodo","DisplayTodo","Link","TodoTable","todos","setTodos","handleCheckBoxChange","id","checked","API","editTodo","completed","then","response","prevTodos","map","todo","createElement","Fragment","className","table","tablehead","tablebody","key","title","to","state","type","onChange","e","target","priority"],"sources":["/home/prasad/Ruby/BlogApp/app/javascript/components/Todos/TodoTable.jsx"],"sourcesContent":["import React from \"react\";\nimport styles from \"./Index.module.css\";\nimport EditTodo from \"./EditTodo\";\nimport DisplayTodo from \"./DisplayTodo\";\nimport { Link } from \"react-router-dom\";\n\nconst TodoTable = ({ todos, setTodos }) => {\n  const handleCheckBoxChange = (id, checked) => {\n    API.editTodo(id, { completed: checked }).then((response) => {\n      setTodos((prevTodos) =>\n        prevTodos.map((todo) =>\n          todo.id === id ? { ...todo, completed: checked } : todo\n        )\n      );\n    });\n  };\n\n  return (\n    <>\n      <table className={styles.table}>\n        <thead className={styles.tablehead}>\n          <tr>\n            <th>Id</th>\n            <th>Title</th>\n            <th>Buttons</th>\n            <th>Priority</th>\n          </tr>\n        </thead>\n        <tbody className={styles.tablebody}>\n          {todos.map((todo) => (\n            <tr key={todo.id}>\n              <td>{todo.id}</td>\n              <td>{todo.title}</td>\n              <td>\n                <Link\n                  to=\"/EditTodo\"\n                  styles={{ \"text-decoration\": \"linethrough\" }}\n                  state={{ id: todo.id, title: todo.title }}\n                >\n                  Edit_{\" \"}\n                </Link>\n                <Link to=\"/DisplayTodo\" state={{ todos: todo, id: todo.id }}>\n                  Display_\n                </Link>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  onChange={(e) =>\n                    handleCheckBoxChange(todo.id, e.target.checked)\n                  }\n                />\n              </td>\n              <td>{todo.priority}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default TodoTable;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACzC,MAAMC,oBAAoB,GAAGA,CAACC,EAAE,EAAEC,OAAO,KAAK;IAC5CC,GAAG,CAACC,QAAQ,CAACH,EAAE,EAAE;MAAEI,SAAS,EAAEH;IAAQ,CAAC,CAAC,CAACI,IAAI,CAAEC,QAAQ,IAAK;MAC1DR,QAAQ,CAAES,SAAS,IACjBA,SAAS,CAACC,GAAG,CAAEC,IAAI,IACjBA,IAAI,CAACT,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGS,IAAI;QAAEL,SAAS,EAAEH;MAAQ,CAAC,GAAGQ,IACrD,CACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,oBACElB,KAAA,CAAAmB,aAAA,CAAAnB,KAAA,CAAAoB,QAAA,qBACEpB,KAAA,CAAAmB,aAAA;IAAOE,SAAS,EAAEpB,MAAM,CAACqB;EAAM,gBAC7BtB,KAAA,CAAAmB,aAAA;IAAOE,SAAS,EAAEpB,MAAM,CAACsB;EAAU,gBACjCvB,KAAA,CAAAmB,aAAA,0BACEnB,KAAA,CAAAmB,aAAA,aAAI,IAAM,CAAC,eACXnB,KAAA,CAAAmB,aAAA,aAAI,OAAS,CAAC,eACdnB,KAAA,CAAAmB,aAAA,aAAI,SAAW,CAAC,eAChBnB,KAAA,CAAAmB,aAAA,aAAI,UAAY,CACd,CACC,CAAC,eACRnB,KAAA,CAAAmB,aAAA;IAAOE,SAAS,EAAEpB,MAAM,CAACuB;EAAU,GAChClB,KAAK,CAACW,GAAG,CAAEC,IAAI,iBACdlB,KAAA,CAAAmB,aAAA;IAAIM,GAAG,EAAEP,IAAI,CAACT;EAAG,gBACfT,KAAA,CAAAmB,aAAA,aAAKD,IAAI,CAACT,EAAO,CAAC,eAClBT,KAAA,CAAAmB,aAAA,aAAKD,IAAI,CAACQ,KAAU,CAAC,eACrB1B,KAAA,CAAAmB,aAAA,0BACEnB,KAAA,CAAAmB,aAAA,CAACf,IAAI;IACHuB,EAAE,EAAC,WAAW;IACd1B,MAAM,EAAE;MAAE,iBAAiB,EAAE;IAAc,CAAE;IAC7C2B,KAAK,EAAE;MAAEnB,EAAE,EAAES,IAAI,CAACT,EAAE;MAAEiB,KAAK,EAAER,IAAI,CAACQ;IAAM;EAAE,GAC3C,OACM,EAAC,GACF,CAAC,eACP1B,KAAA,CAAAmB,aAAA,CAACf,IAAI;IAACuB,EAAE,EAAC,cAAc;IAACC,KAAK,EAAE;MAAEtB,KAAK,EAAEY,IAAI;MAAET,EAAE,EAAES,IAAI,CAACT;IAAG;EAAE,GAAC,UAEvD,CAAC,eACPT,KAAA,CAAAmB,aAAA;IACEU,IAAI,EAAC,UAAU;IACfnB,OAAO,EAAEQ,IAAI,CAACL,SAAU;IACxBiB,QAAQ,EAAGC,CAAC,IACVvB,oBAAoB,CAACU,IAAI,CAACT,EAAE,EAAEsB,CAAC,CAACC,MAAM,CAACtB,OAAO;EAC/C,CACF,CACC,CAAC,eACLV,KAAA,CAAAmB,aAAA,aAAKD,IAAI,CAACe,QAAa,CACrB,CACL,CACI,CACF,CACP,CAAC;AAEP,CAAC;AAED,eAAe5B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}