{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport * as API from \"../utils/api\";\nimport EditInfo from \"./EditInfo\"; // Import the EditInfo component\n\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = () => {\n    API.getTodos().then(response => {\n      setTodos(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleDelete = id => {\n    API.deleteTodo(id).then(() => {\n      fetchTodos();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleUpdate = (id, updatedTodo) => {\n    API.updateTodo(id, updatedTodo).then(() => {\n      fetchTodos();\n      setEditingTodoId(null); // Clear editing state after update\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleEdit = todo => {\n    setEditingTodoId(todo.id);\n  };\n  const handleCancelEdit = () => {\n    setEditingTodoId(null);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", null, /*#__PURE__*/React.createElement(\"tbody\", null, todos.map(todo => /*#__PURE__*/React.createElement(\"tr\", {\n    key: todo.id\n  }, /*#__PURE__*/React.createElement(\"td\", null, todo.id), /*#__PURE__*/React.createElement(\"td\", null, editingTodoId === todo.id ? /*#__PURE__*/React.createElement(EditInfo, {\n    todo: todo,\n    onSave: handleUpdate,\n    onCancel: handleCancelEdit\n  }) : todo.title), /*#__PURE__*/React.createElement(\"td\", null, todo.description), /*#__PURE__*/React.createElement(\"td\", null, todo.completed ? \"Yes\" : \"No\"), /*#__PURE__*/React.createElement(\"td\", null, editingTodoId !== todo.id && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleEdit(todo)\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDelete(todo.id)\n  }, \"Delete\"))))))));\n};\nexport default Index;","map":{"version":3,"names":["React","useEffect","useState","API","EditInfo","Index","todos","setTodos","editingTodoId","setEditingTodoId","fetchTodos","getTodos","then","response","data","catch","error","console","log","handleDelete","id","deleteTodo","handleUpdate","updatedTodo","updateTodo","handleEdit","todo","handleCancelEdit","createElement","Fragment","map","key","onSave","onCancel","title","description","completed","onClick"],"sources":["/home/prasad/Ruby/BlogApp/app/javascript/components/Todos/Index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as API from \"../utils/api\";\nimport EditInfo from \"./EditInfo\"; // Import the EditInfo component\n\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    API.getTodos()\n      .then((response) => {\n        setTodos(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleDelete = (id) => {\n    API.deleteTodo(id)\n      .then(() => {\n        fetchTodos();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleUpdate = (id, updatedTodo) => {\n    API.updateTodo(id, updatedTodo)\n      .then(() => {\n        fetchTodos();\n        setEditingTodoId(null); // Clear editing state after update\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleEdit = (todo) => {\n    setEditingTodoId(todo.id);\n  };\n\n  const handleCancelEdit = () => {\n    setEditingTodoId(null);\n  };\n\n  return (\n    <>\n      <table>\n        {/* Table header */}\n        {/* ... */}\n        <tbody>\n          {todos.map((todo) => (\n            <tr key={todo.id}>\n              <td>{todo.id}</td>\n              <td>\n                {editingTodoId === todo.id ? (\n                  <EditInfo\n                    todo={todo}\n                    onSave={handleUpdate}\n                    onCancel={handleCancelEdit}\n                  ></EditInfo>\n                ) : (\n                  todo.title\n                )}\n              </td>\n              <td>{todo.description}</td>\n              <td>{todo.completed ? \"Yes\" : \"No\"}</td>\n              <td>\n                {editingTodoId !== todo.id && (\n                  <>\n                    <button onClick={() => handleEdit(todo)}>Edit</button>\n                    <button onClick={() => handleDelete(todo.id)}>\n                      Delete\n                    </button>\n                  </>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Index;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}