{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport { Link } from \"react-router-dom\";\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = () => {\n    API.getTodos().then(response => {\n      setTodos(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  const handleDelete = id => {\n    API.deleteTodo(id).then(() => {\n      fetchTodos();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  const handleCheckBoxChange = (id, checked) => {\n    API.editTodo(id, {\n      completed: checked\n    }).then(() => {\n      fetchTodos(); // Refresh todos after updating completion status\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const incompleteTodos = todos.filter(todo => !todo.completed);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/NewTodo\"\n  }, \"New Todo\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/CompleteTodo\",\n    state: {\n      completed: todos.filter(todo => todo.completed)\n    }\n  }, \"Completed Todo\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: styles.table\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: styles.tablehead\n  }, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", null, \"Id\"), /*#__PURE__*/React.createElement(\"th\", null, \"Title\"), /*#__PURE__*/React.createElement(\"th\", null, \"Buttons\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: styles.tablebody\n  }, incompleteTodos.map(todo => /*#__PURE__*/React.createElement(\"tr\", {\n    key: todo.id\n  }, /*#__PURE__*/React.createElement(\"td\", null, todo.id), /*#__PURE__*/React.createElement(\"td\", null, todo.title), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(Link, {\n    to: `/EditTodo?id=${todo.id}&title=${todo.title}`\n  }, \"Edit_\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: todo.completed,\n    onChange: e => handleCheckBoxChange(todo.id, e.target.checked)\n  })))))));\n};\nexport default Index;","map":{"version":3,"names":["React","useEffect","useState","API","styles","Link","Index","todos","setTodos","fetchTodos","getTodos","then","response","data","catch","error","console","log","handleDelete","id","deleteTodo","handleCheckBoxChange","checked","editTodo","completed","incompleteTodos","filter","todo","createElement","Fragment","to","state","className","table","tablehead","tablebody","map","key","title","type","onChange","e","target"],"sources":["/home/prasad/Ruby/BlogApp/app/javascript/components/Todos/Index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    API.getTodos()\n      .then((response) => {\n        setTodos(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleDelete = (id) => {\n    API.deleteTodo(id)\n      .then(() => {\n        fetchTodos();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleCheckBoxChange = (id, checked) => {\n    API.editTodo(id, { completed: checked })\n      .then(() => {\n        fetchTodos(); // Refresh todos after updating completion status\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const incompleteTodos = todos.filter((todo) => !todo.completed);\n\n  return (\n    <>\n      <Link to=\"/NewTodo\">New Todo</Link>\n      <Link\n        to=\"/CompleteTodo\"\n        state={{ completed: todos.filter((todo) => todo.completed) }}\n      >\n        Completed Todo\n      </Link>\n\n      <table className={styles.table}>\n        <thead className={styles.tablehead}>\n          <tr>\n            <th>Id</th>\n            <th>Title</th>\n            <th>Buttons</th>\n          </tr>\n        </thead>\n        <tbody className={styles.tablebody}>\n          {incompleteTodos.map((todo) => (\n            <tr key={todo.id}>\n              <td>{todo.id}</td>\n              <td>{todo.title}</td>\n              <td>\n                <Link to={`/EditTodo?id=${todo.id}&title=${todo.title}`}>\n                  Edit_\n                </Link>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  onChange={(e) =>\n                    handleCheckBoxChange(todo.id, e.target.checked)\n                  }\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Index;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}