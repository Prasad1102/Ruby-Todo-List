{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport NewTodo from \"./NewTodo\";\nimport EditTodo from \"./EditTodo\";\nimport { Link } from \"react-router-dom\";\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = () => {\n    API.getTodos().then(response => {\n      setTodos(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  const handleDelete = id => {\n    API.deleteTodo(id).then(() => {\n      fetchTodos();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  const handleEdit = id => {\n    console.log(`Editing todo with ID: ${id}`);\n    setEditingTodoId(id);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"NewTodo\"\n  }, \"New Todo\"), /*#__PURE__*/React.createElement(\"table\", null, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", null, \"Id\"), /*#__PURE__*/React.createElement(\"th\", null, \"Title\"), /*#__PURE__*/React.createElement(\"th\", null, \"Buttons\"))), /*#__PURE__*/React.createElement(\"tbody\", null, todos.map(todo => /*#__PURE__*/React.createElement(\"tr\", {\n    key: todo.id\n  }, /*#__PURE__*/React.createElement(\"td\", null, todo.id), /*#__PURE__*/React.createElement(\"td\", null, todo.title), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDelete(todo.id)\n  }, \"Delete\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/EditTodo\",\n    state: {\n      id: todo.id,\n      title: todo.title\n    }\n  }, \"Edit\")))))));\n};\nexport default Index;","map":{"version":3,"names":["React","useEffect","useState","API","NewTodo","EditTodo","Link","Index","todos","setTodos","editingTodoId","setEditingTodoId","fetchTodos","getTodos","then","response","data","catch","error","console","log","handleDelete","id","deleteTodo","handleEdit","createElement","Fragment","to","map","todo","key","title","onClick","state"],"sources":["/home/prasad/Ruby/BlogApp/app/javascript/components/Todos/Index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport NewTodo from \"./NewTodo\";\nimport EditTodo from \"./EditTodo\";\nimport { Link } from \"react-router-dom\";\n\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    API.getTodos()\n      .then((response) => {\n        setTodos(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleDelete = (id) => {\n    API.deleteTodo(id)\n      .then(() => {\n        fetchTodos();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleEdit = (id) => {\n    console.log(`Editing todo with ID: ${id}`);\n    setEditingTodoId(id);\n  };\n\n  return (\n    <>\n      {/* <Link to=\"/NewTodo\">New Todo</Link> */}\n      <Link to=\"NewTodo\">New Todo</Link>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Title</th>\n            <th>Buttons</th>\n          </tr>\n        </thead>\n        <tbody>\n          {todos.map((todo) => (\n            <tr key={todo.id}>\n              <td>{todo.id}</td>\n              <td>{todo.title}</td>\n              <td>\n                {/* <button onClick={() => handleEdit(todo.id)}>Edit</button> */}\n\n                <button onClick={() => handleDelete(todo.id)}>Delete</button>\n                <Link to=\"/EditTodo\" state={{ id: todo.id, title: todo.title }}>\n                  Edit\n                </Link>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Index;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,KAAKC,GAAG,MAAM,iBAAiB;AACtC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExDD,SAAS,CAAC,MAAM;IACdW,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAGA,CAAA,KAAM;IACvBT,GAAG,CAACU,QAAQ,CAAC,CAAC,CACXC,IAAI,CAAEC,QAAQ,IAAK;MAClBN,QAAQ,CAACM,QAAQ,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAED,MAAMG,YAAY,GAAIC,EAAE,IAAK;IAC3BnB,GAAG,CAACoB,UAAU,CAACD,EAAE,CAAC,CACfR,IAAI,CAAC,MAAM;MACVF,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,CACDK,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAED,MAAMM,UAAU,GAAIF,EAAE,IAAK;IACzBH,OAAO,CAACC,GAAG,CAAE,yBAAwBE,EAAG,EAAC,CAAC;IAC1CX,gBAAgB,CAACW,EAAE,CAAC;EACtB,CAAC;EAED,oBACEtB,KAAA,CAAAyB,aAAA,CAAAzB,KAAA,CAAA0B,QAAA,qBAEE1B,KAAA,CAAAyB,aAAA,CAACnB,IAAI;IAACqB,EAAE,EAAC;EAAS,GAAC,UAAc,CAAC,eAClC3B,KAAA,CAAAyB,aAAA,6BACEzB,KAAA,CAAAyB,aAAA,6BACEzB,KAAA,CAAAyB,aAAA,0BACEzB,KAAA,CAAAyB,aAAA,aAAI,IAAM,CAAC,eACXzB,KAAA,CAAAyB,aAAA,aAAI,OAAS,CAAC,eACdzB,KAAA,CAAAyB,aAAA,aAAI,SAAW,CACb,CACC,CAAC,eACRzB,KAAA,CAAAyB,aAAA,gBACGjB,KAAK,CAACoB,GAAG,CAAEC,IAAI,iBACd7B,KAAA,CAAAyB,aAAA;IAAIK,GAAG,EAAED,IAAI,CAACP;EAAG,gBACftB,KAAA,CAAAyB,aAAA,aAAKI,IAAI,CAACP,EAAO,CAAC,eAClBtB,KAAA,CAAAyB,aAAA,aAAKI,IAAI,CAACE,KAAU,CAAC,eACrB/B,KAAA,CAAAyB,aAAA,0BAGEzB,KAAA,CAAAyB,aAAA;IAAQO,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAACQ,IAAI,CAACP,EAAE;EAAE,GAAC,QAAc,CAAC,eAC7DtB,KAAA,CAAAyB,aAAA,CAACnB,IAAI;IAACqB,EAAE,EAAC,WAAW;IAACM,KAAK,EAAE;MAAEX,EAAE,EAAEO,IAAI,CAACP,EAAE;MAAES,KAAK,EAAEF,IAAI,CAACE;IAAM;EAAE,GAAC,MAE1D,CACJ,CACF,CACL,CACI,CACF,CACP,CAAC;AAEP,CAAC;AAED,eAAexB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}