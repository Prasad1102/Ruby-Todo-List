{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport NewTodo from \"./NewTodo\";\nimport EditTodo from \"./EditTodo\";\nimport DisplayTodo from \"./DisplayTodo\";\nimport { Link } from \"react-router-dom\";\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  const [completed, setCompleted] = useState(false);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = () => {\n    API.getTodos().then(response => {\n      setTodos(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  const handleDelete = id => {\n    API.deleteTodo(id).then(() => {\n      fetchTodos();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  const handleCheckBoxChange = () => {\n    setCompleted(true);\n  };\n  const handlecheckbox = e => {\n    API.editTodo(state.id, {\n      completed: completed\n    });\n  };\n  const handleEdit = id => {\n    console.log(`Editing todo with ID: ${id}`);\n    setEditingTodoId(id);\n  };\n  const sortTodo = () => {\n    let completeHash = [];\n    let incompletedHash = [];\n    for (i = 0; i < todos.length; i++) {\n      if (todo.completed === true) {\n        completeHash = todo[i];\n      }\n    }\n    console.log(completedHash);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, console.log(todos)), /*#__PURE__*/React.createElement(Link, {\n    to: \"/NewTodo\"\n  }, \"New Todo\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/CompleteTodo\",\n    state: {\n      completeHash: completeHash\n    }\n  }, \"Completed Todo\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: styles.table\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: styles.tablehead\n  }, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", null, \"Id\"), /*#__PURE__*/React.createElement(\"th\", null, \"Title\"), /*#__PURE__*/React.createElement(\"th\", null, \"Buttons\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: styles.tablebody\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"tr\", {\n    key: todo.id\n  }, /*#__PURE__*/React.createElement(\"td\", null, todo.id), /*#__PURE__*/React.createElement(\"td\", null, todo.title), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/EditTodo\",\n    state: {\n      id: todo.id,\n      title: todo.title\n    }\n  }, \"Edit_\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/DisplayTodo\",\n    state: {\n      todos: todo,\n      id: todo.id\n    }\n  }, \"Display_\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onClick: handlecheckbox,\n    onChange: handleCheckBoxChange\n  })))))));\n};\nexport default Index;","map":{"version":3,"names":["React","useEffect","useState","API","styles","NewTodo","EditTodo","DisplayTodo","Link","Index","todos","setTodos","editingTodoId","setEditingTodoId","completed","setCompleted","fetchTodos","getTodos","then","response","data","catch","error","console","log","handleDelete","id","deleteTodo","handleCheckBoxChange","handlecheckbox","e","editTodo","state","handleEdit","sortTodo","completeHash","incompletedHash","i","length","todo","completedHash","createElement","Fragment","to","className","table","tablehead","tablebody","map","key","title","type","onClick","onChange"],"sources":["/home/prasad/Ruby/BlogApp/app/javascript/components/Todos/Index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport NewTodo from \"./NewTodo\";\nimport EditTodo from \"./EditTodo\";\nimport DisplayTodo from \"./DisplayTodo\";\nimport { Link } from \"react-router-dom\";\n\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  const [completed, setCompleted] = useState(false);\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    API.getTodos()\n      .then((response) => {\n        setTodos(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleDelete = (id) => {\n    API.deleteTodo(id)\n      .then(() => {\n        fetchTodos();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleCheckBoxChange = () => {\n    setCompleted(true);\n  };\n\n  const handlecheckbox = (e) => {\n    API.editTodo(state.id, { completed: completed });\n  };\n\n  const handleEdit = (id) => {\n    console.log(`Editing todo with ID: ${id}`);\n    setEditingTodoId(id);\n  };\n\n  const sortTodo = () => {\n    let completeHash = [];\n    let incompletedHash = [];\n    for (i = 0; i < todos.length; i++) {\n      if (todo.completed === true) {\n        completeHash = todo[i];\n      }\n    }\n    console.log(completedHash);\n  };\n\n  return (\n    <>\n      <p>{console.log(todos)}</p>\n      <Link to=\"/NewTodo\">New Todo</Link>\n      <Link to=\"/CompleteTodo\" state={{ completeHash: completeHash }}>\n        Completed Todo\n      </Link>\n      <table className={styles.table}>\n        <thead className={styles.tablehead}>\n          <tr>\n            <th>Id</th>\n            <th>Title</th>\n            <th>Buttons</th>\n          </tr>\n        </thead>\n        <tbody className={styles.tablebody}>\n          {todos.map((todo) => (\n            <tr key={todo.id}>\n              <td>{todo.id}</td>\n              <td>{todo.title}</td>\n              <td>\n                {/* <button onClick={() => handleDelete(todo.id)}>Delete </button> */}\n                {/* Above button is to Delete the Record from the database */}\n\n                <Link to=\"/EditTodo\" state={{ id: todo.id, title: todo.title }}>\n                  Edit_\n                </Link>\n\n                <Link to=\"/DisplayTodo\" state={{ todos: todo, id: todo.id }}>\n                  Display_\n                </Link>\n\n                <input\n                  type=\"checkbox\"\n                  onClick={handlecheckbox}\n                  onChange={handleCheckBoxChange}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Index;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}