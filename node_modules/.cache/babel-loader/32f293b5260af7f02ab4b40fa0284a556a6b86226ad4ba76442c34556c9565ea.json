{"ast":null,"code":"import React from \"react\";\nconst Paginate = ({\n  currentPage,\n  setCurrentPage,\n  fetchTodos,\n  todos\n}) => {\n  const changePage = page => {\n    if (page >= 1 && todos.length > 0) {\n      setCurrentPage(page);\n      fetchTodos();\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"p\", null, \"length\" + todos.length), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changePage(currentPage - 1)\n  }, \"Prev\"), \"...\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      changePage(1);\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      changePage(2);\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      changePage(3);\n    }\n  }, \"3\"), \"...\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changePage(currentPage + 1)\n  }, \"Next\")));\n};\nexport default Paginate;\n\n// {[...Array(totalPages).keys()].map((page) => (\n//           <button key={page + 1} onClick={() => changePage(page + 1)}>\n//             {page + 1}\n//           </button>\n//         ))}","map":{"version":3,"names":["React","Paginate","currentPage","setCurrentPage","fetchTodos","todos","changePage","page","length","createElement","Fragment","onClick"],"sources":["/home/prasad/Ruby/BlogApp/app/javascript/components/Todos/Paginate.jsx"],"sourcesContent":["import React from \"react\";\n\nconst Paginate = ({ currentPage, setCurrentPage, fetchTodos, todos }) => {\n  const changePage = (page) => {\n    if (page >= 1 && todos.length > 0) {\n      setCurrentPage(page);\n      fetchTodos();\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <p>{\"length\" + todos.length}</p>\n        <button onClick={() => changePage(currentPage - 1)}>Prev</button>\n        ...\n        <button\n          onClick={() => {\n            changePage(1);\n          }}\n        >\n          1\n        </button>\n        <button\n          onClick={() => {\n            changePage(2);\n          }}\n        >\n          2\n        </button>\n        <button\n          onClick={() => {\n            changePage(3);\n          }}\n        >\n          3\n        </button>\n        ...\n        <button onClick={() => changePage(currentPage + 1)}>Next</button>\n      </div>\n    </>\n  );\n};\n\nexport default Paginate;\n\n// {[...Array(totalPages).keys()].map((page) => (\n//           <button key={page + 1} onClick={() => changePage(page + 1)}>\n//             {page + 1}\n//           </button>\n//         ))}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,WAAW;EAAEC,cAAc;EAAEC,UAAU;EAAEC;AAAM,CAAC,KAAK;EACvE,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAIA,IAAI,IAAI,CAAC,IAAIF,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;MACjCL,cAAc,CAACI,IAAI,CAAC;MACpBH,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAED,oBACEJ,KAAA,CAAAS,aAAA,CAAAT,KAAA,CAAAU,QAAA,qBACEV,KAAA,CAAAS,aAAA,2BACET,KAAA,CAAAS,aAAA,YAAI,QAAQ,GAAGJ,KAAK,CAACG,MAAU,CAAC,eAChCR,KAAA,CAAAS,aAAA;IAAQE,OAAO,EAAEA,CAAA,KAAML,UAAU,CAACJ,WAAW,GAAG,CAAC;EAAE,GAAC,MAAY,CAAC,OAEjE,eAAAF,KAAA,CAAAS,aAAA;IACEE,OAAO,EAAEA,CAAA,KAAM;MACbL,UAAU,CAAC,CAAC,CAAC;IACf;EAAE,GACH,GAEO,CAAC,eACTN,KAAA,CAAAS,aAAA;IACEE,OAAO,EAAEA,CAAA,KAAM;MACbL,UAAU,CAAC,CAAC,CAAC;IACf;EAAE,GACH,GAEO,CAAC,eACTN,KAAA,CAAAS,aAAA;IACEE,OAAO,EAAEA,CAAA,KAAM;MACbL,UAAU,CAAC,CAAC,CAAC;IACf;EAAE,GACH,GAEO,CAAC,OAET,eAAAN,KAAA,CAAAS,aAAA;IAAQE,OAAO,EAAEA,CAAA,KAAML,UAAU,CAACJ,WAAW,GAAG,CAAC;EAAE,GAAC,MAAY,CAC7D,CACL,CAAC;AAEP,CAAC;AAED,eAAeD,QAAQ;;AAEvB;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}