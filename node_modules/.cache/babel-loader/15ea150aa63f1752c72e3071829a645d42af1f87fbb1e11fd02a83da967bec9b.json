{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport NewTodo from \"./NewTodo\";\nimport EditTodo from \"./EditTodo\";\nimport DisplayTodo from \"./DisplayTodo\";\nimport { Link } from \"react-router-dom\";\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = () => {\n    API.getTodos().then(response => {\n      setTodos(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  const handleDelete = id => {\n    API.deleteTodo(id).then(() => {\n      fetchTodos();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  const handlecheckbox = e => {\n    API.editTodo(state.id, {\n      completed: true\n    });\n    //sending id and title to api\n  };\n  const handleEdit = id => {\n    console.log(`Editing todo with ID: ${id}`);\n    setEditingTodoId(id);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, console.log(todos)), /*#__PURE__*/React.createElement(Link, {\n    to: \"/NewTodo\"\n  }, \"New Todo\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: styles.table\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: styles.tablehead\n  }, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", null, \"Id\"), /*#__PURE__*/React.createElement(\"th\", null, \"Title\"), /*#__PURE__*/React.createElement(\"th\", null, \"Buttons\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: styles.tablebody\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"tr\", {\n    key: todo.id\n  }, /*#__PURE__*/React.createElement(\"td\", null, todo.id), /*#__PURE__*/React.createElement(\"td\", null, todo.title), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/EditTodo\",\n    state: {\n      id: todo.id,\n      title: todo.title\n    }\n  }, \"Edit_\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/DisplayTodo\",\n    state: {\n      todos: todo,\n      id: todo.id\n    }\n  }, \"Display_\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onClick: handlecheckbox\n  })))))));\n};\nexport default Index;","map":{"version":3,"names":["React","useEffect","useState","API","styles","NewTodo","EditTodo","DisplayTodo","Link","Index","todos","setTodos","editingTodoId","setEditingTodoId","fetchTodos","getTodos","then","response","data","catch","error","console","log","handleDelete","id","deleteTodo","handlecheckbox","e","editTodo","state","completed","handleEdit","createElement","Fragment","to","className","table","tablehead","tablebody","map","todo","key","title","type","onClick"],"sources":["/home/prasad/Ruby/BlogApp/app/javascript/components/Todos/Index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport NewTodo from \"./NewTodo\";\nimport EditTodo from \"./EditTodo\";\nimport DisplayTodo from \"./DisplayTodo\";\nimport { Link } from \"react-router-dom\";\n\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    API.getTodos()\n      .then((response) => {\n        setTodos(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleDelete = (id) => {\n    API.deleteTodo(id)\n      .then(() => {\n        fetchTodos();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handlecheckbox = (e) => {\n    API.editTodo(state.id, { completed: true });\n    //sending id and title to api\n  };\n\n  const handleEdit = (id) => {\n    console.log(`Editing todo with ID: ${id}`);\n    setEditingTodoId(id);\n  };\n\n  return (\n    <>\n      <p>{console.log(todos)}</p>\n      <Link to=\"/NewTodo\">New Todo</Link>\n      <table className={styles.table}>\n        <thead className={styles.tablehead}>\n          <tr>\n            <th>Id</th>\n            <th>Title</th>\n            <th>Buttons</th>\n          </tr>\n        </thead>\n        <tbody className={styles.tablebody}>\n          {todos.map((todo) => (\n            <tr key={todo.id}>\n              <td>{todo.id}</td>\n              <td>{todo.title}</td>\n              <td>\n                {/* <button onClick={() => handleDelete(todo.id)}>Delete </button> */}\n                {/* Above button is to Delete the Record from the database */}\n\n                <Link to=\"/EditTodo\" state={{ id: todo.id, title: todo.title }}>\n                  Edit_\n                </Link>\n\n                <Link to=\"/DisplayTodo\" state={{ todos: todo, id: todo.id }}>\n                  Display_\n                </Link>\n\n                <input type=\"checkbox\" onClick={handlecheckbox} />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Index;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}