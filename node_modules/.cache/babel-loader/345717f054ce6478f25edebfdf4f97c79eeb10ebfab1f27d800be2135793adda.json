{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport { Link } from \"react-router-dom\";\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n  const handleCheckBoxChange = (id, checked) => {\n    API.editTodo(id, {\n      completed: checked\n    });\n  };\n  const incompleteTodos = todos.filter(todo => !todo.completed);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/NewTodo\"\n  }, \"New Todo\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/CompleteTodo\",\n    state: {\n      completed: todos.filter(todo => todo.completed)\n    }\n  }, \"Completed Todo\"), /*#__PURE__*/React.createElement(\"p\", null, console.log(incompleteTodos)), /*#__PURE__*/React.createElement(\"table\", {\n    className: styles.table\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: styles.tablehead\n  }, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", null, \"Id\"), /*#__PURE__*/React.createElement(\"th\", null, \"Title\"), /*#__PURE__*/React.createElement(\"th\", null, \"Buttons\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: styles.tablebody\n  }, incompleteTodos.map(todo => /*#__PURE__*/React.createElement(\"tr\", {\n    key: todo.id\n  }, /*#__PURE__*/React.createElement(\"td\", null, todo.id), /*#__PURE__*/React.createElement(\"td\", null, todo.title), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(Link, {\n    to: `/EditTodo?id=${todo.id}&title=${todo.title}`\n  }, \"Edit_\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: todo.completed,\n    onChange: e => handleCheckBoxChange(todo.id, e.target.checked)\n  })))))));\n};\nexport default Index;","map":{"version":3,"names":["React","useEffect","useState","API","styles","Link","Index","todos","setTodos","handleCheckBoxChange","id","checked","editTodo","completed","incompleteTodos","filter","todo","createElement","Fragment","to","state","console","log","className","table","tablehead","tablebody","map","key","title","type","onChange","e","target"],"sources":["/home/prasad/Ruby/BlogApp/app/javascript/components/Todos/Index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nimport styles from \"./Index.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Index = () => {\n  const [todos, setTodos] = useState([]);\n\n  const handleCheckBoxChange = (id, checked) => {\n    API.editTodo(id, { completed: checked });\n  };\n\n  const incompleteTodos = todos.filter((todo) => !todo.completed);\n\n  return (\n    <>\n      <Link to=\"/NewTodo\">New Todo</Link>\n      <Link\n        to=\"/CompleteTodo\"\n        state={{ completed: todos.filter((todo) => todo.completed) }}\n      >\n        Completed Todo\n      </Link>\n      <p>{console.log(incompleteTodos)}</p>\n\n      <table className={styles.table}>\n        <thead className={styles.tablehead}>\n          <tr>\n            <th>Id</th>\n            <th>Title</th>\n            <th>Buttons</th>\n          </tr>\n        </thead>\n        <tbody className={styles.tablebody}>\n          {incompleteTodos.map((todo) => (\n            <tr key={todo.id}>\n              <td>{todo.id}</td>\n              <td>{todo.title}</td>\n              <td>\n                {/* <button onClick={() => handleDelete(todo.id)}>Delete </button> */}\n                {/* Above button is to Delete the Record from the database */}\n                <Link to={`/EditTodo?id=${todo.id}&title=${todo.title}`}>\n                  Edit_\n                </Link>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  onChange={(e) =>\n                    handleCheckBoxChange(todo.id, e.target.checked)\n                  }\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Index;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,KAAKC,GAAG,MAAM,iBAAiB;AACtC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMO,oBAAoB,GAAGA,CAACC,EAAE,EAAEC,OAAO,KAAK;IAC5CR,GAAG,CAACS,QAAQ,CAACF,EAAE,EAAE;MAAEG,SAAS,EAAEF;IAAQ,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMG,eAAe,GAAGP,KAAK,CAACQ,MAAM,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACH,SAAS,CAAC;EAE/D,oBACEb,KAAA,CAAAiB,aAAA,CAAAjB,KAAA,CAAAkB,QAAA,qBACElB,KAAA,CAAAiB,aAAA,CAACZ,IAAI;IAACc,EAAE,EAAC;EAAU,GAAC,UAAc,CAAC,eACnCnB,KAAA,CAAAiB,aAAA,CAACZ,IAAI;IACHc,EAAE,EAAC,eAAe;IAClBC,KAAK,EAAE;MAAEP,SAAS,EAAEN,KAAK,CAACQ,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,SAAS;IAAE;EAAE,GAC9D,gBAEK,CAAC,eACPb,KAAA,CAAAiB,aAAA,YAAII,OAAO,CAACC,GAAG,CAACR,eAAe,CAAK,CAAC,eAErCd,KAAA,CAAAiB,aAAA;IAAOM,SAAS,EAAEnB,MAAM,CAACoB;EAAM,gBAC7BxB,KAAA,CAAAiB,aAAA;IAAOM,SAAS,EAAEnB,MAAM,CAACqB;EAAU,gBACjCzB,KAAA,CAAAiB,aAAA,0BACEjB,KAAA,CAAAiB,aAAA,aAAI,IAAM,CAAC,eACXjB,KAAA,CAAAiB,aAAA,aAAI,OAAS,CAAC,eACdjB,KAAA,CAAAiB,aAAA,aAAI,SAAW,CACb,CACC,CAAC,eACRjB,KAAA,CAAAiB,aAAA;IAAOM,SAAS,EAAEnB,MAAM,CAACsB;EAAU,GAChCZ,eAAe,CAACa,GAAG,CAAEX,IAAI,iBACxBhB,KAAA,CAAAiB,aAAA;IAAIW,GAAG,EAAEZ,IAAI,CAACN;EAAG,gBACfV,KAAA,CAAAiB,aAAA,aAAKD,IAAI,CAACN,EAAO,CAAC,eAClBV,KAAA,CAAAiB,aAAA,aAAKD,IAAI,CAACa,KAAU,CAAC,eACrB7B,KAAA,CAAAiB,aAAA,0BAGEjB,KAAA,CAAAiB,aAAA,CAACZ,IAAI;IAACc,EAAE,EAAG,gBAAeH,IAAI,CAACN,EAAG,UAASM,IAAI,CAACa,KAAM;EAAE,GAAC,OAEnD,CAAC,eACP7B,KAAA,CAAAiB,aAAA;IACEa,IAAI,EAAC,UAAU;IACfnB,OAAO,EAAEK,IAAI,CAACH,SAAU;IACxBkB,QAAQ,EAAGC,CAAC,IACVvB,oBAAoB,CAACO,IAAI,CAACN,EAAE,EAAEsB,CAAC,CAACC,MAAM,CAACtB,OAAO;EAC/C,CACF,CACC,CACF,CACL,CACI,CACF,CACP,CAAC;AAEP,CAAC;AAED,eAAeL,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}