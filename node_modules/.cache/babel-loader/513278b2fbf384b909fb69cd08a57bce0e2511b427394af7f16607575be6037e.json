{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\nconst Paginate = () => {\n  const [state, setState] = useState({\n    todos: [],\n    perPage: 3,\n    page: 1\n  });\n  useEffect(() => {\n    fetchTodos();\n  }, [state.page]);\n  const fetchTodos = () => {\n    console.log(state.page, state.perPage);\n    API.getTodos({\n      page: state.page,\n      per_page: state.perPage\n    }).then(response => {\n      setTodos(response.data);\n      setState(prevState => {\n        return {\n          ...prevState,\n          // Spread operator used to retain previous state\n          todos: response.data // Updating 'todos' property in the state with new data from response\n        };\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  const changePage = page => {\n    setState(prevState => {\n      return {\n        ...prevState,\n        // Spread operator used to retain previous state\n        page: page // Updating 'todos' property in the state with new data from response\n      };\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (state.page > 1) {\n        changePage(state.page - 1);\n      }\n    }\n  }, \"Prev\"), \"...\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      changePage(1);\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      changePage(2);\n    }\n  }, \"2\"), \"...\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (todos.length >= 1 && todos.length != 0) {\n        changePage(state.page + 1);\n      }\n    }\n  }, \"Next\")));\n};\nexport default Paginate;","map":{"version":3,"names":["React","useEffect","useState","API","Paginate","state","setState","todos","perPage","page","fetchTodos","console","log","getTodos","per_page","then","response","setTodos","data","prevState","catch","error","changePage","createElement","Fragment","onClick","length"],"sources":["/home/prasad/Ruby/BlogApp/app/javascript/components/Todos/Paginate.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as API from \"../../utils/api\";\n\nconst Paginate = () => {\n  const [state, setState] = useState({ todos: [], perPage: 3, page: 1 });\n\n  useEffect(() => {\n    fetchTodos();\n  }, [state.page]);\n\n  const fetchTodos = () => {\n    console.log(state.page, state.perPage);\n    API.getTodos({ page: state.page, per_page: state.perPage })\n      .then((response) => {\n        setTodos(response.data);\n        setState((prevState) => {\n          return {\n            ...prevState, // Spread operator used to retain previous state\n            todos: response.data, // Updating 'todos' property in the state with new data from response\n          };\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const changePage = (page) => {\n    setState((prevState) => {\n      return {\n        ...prevState, // Spread operator used to retain previous state\n        page: page, // Updating 'todos' property in the state with new data from response\n      };\n    });\n  };\n\n  return (\n    <>\n      <div>\n        <button\n          onClick={() => {\n            if (state.page > 1) {\n              changePage(state.page - 1);\n            }\n          }}\n        >\n          Prev\n        </button>\n        ...\n        <button\n          onClick={() => {\n            changePage(1);\n          }}\n        >\n          1\n        </button>\n        <button\n          onClick={() => {\n            changePage(2);\n          }}\n        >\n          2\n        </button>\n        ...\n        <button\n          onClick={() => {\n            if (todos.length >= 1 && todos.length != 0) {\n              changePage(state.page + 1);\n            }\n          }}\n        >\n          Next\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Paginate;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,KAAKC,GAAG,MAAM,iBAAiB;AAEtC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC;IAAEK,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAE,CAAC,CAAC;EAEtER,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACL,KAAK,CAACI,IAAI,CAAC,CAAC;EAEhB,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBC,OAAO,CAACC,GAAG,CAACP,KAAK,CAACI,IAAI,EAAEJ,KAAK,CAACG,OAAO,CAAC;IACtCL,GAAG,CAACU,QAAQ,CAAC;MAAEJ,IAAI,EAAEJ,KAAK,CAACI,IAAI;MAAEK,QAAQ,EAAET,KAAK,CAACG;IAAQ,CAAC,CAAC,CACxDO,IAAI,CAAEC,QAAQ,IAAK;MAClBC,QAAQ,CAACD,QAAQ,CAACE,IAAI,CAAC;MACvBZ,QAAQ,CAAEa,SAAS,IAAK;QACtB,OAAO;UACL,GAAGA,SAAS;UAAE;UACdZ,KAAK,EAAES,QAAQ,CAACE,IAAI,CAAE;QACxB,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC,CACDE,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBV,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,UAAU,GAAIb,IAAI,IAAK;IAC3BH,QAAQ,CAAEa,SAAS,IAAK;MACtB,OAAO;QACL,GAAGA,SAAS;QAAE;QACdV,IAAI,EAAEA,IAAI,CAAE;MACd,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,oBACET,KAAA,CAAAuB,aAAA,CAAAvB,KAAA,CAAAwB,QAAA,qBACExB,KAAA,CAAAuB,aAAA,2BACEvB,KAAA,CAAAuB,aAAA;IACEE,OAAO,EAAEA,CAAA,KAAM;MACb,IAAIpB,KAAK,CAACI,IAAI,GAAG,CAAC,EAAE;QAClBa,UAAU,CAACjB,KAAK,CAACI,IAAI,GAAG,CAAC,CAAC;MAC5B;IACF;EAAE,GACH,MAEO,CAAC,OAET,eAAAT,KAAA,CAAAuB,aAAA;IACEE,OAAO,EAAEA,CAAA,KAAM;MACbH,UAAU,CAAC,CAAC,CAAC;IACf;EAAE,GACH,GAEO,CAAC,eACTtB,KAAA,CAAAuB,aAAA;IACEE,OAAO,EAAEA,CAAA,KAAM;MACbH,UAAU,CAAC,CAAC,CAAC;IACf;EAAE,GACH,GAEO,CAAC,OAET,eAAAtB,KAAA,CAAAuB,aAAA;IACEE,OAAO,EAAEA,CAAA,KAAM;MACb,IAAIlB,KAAK,CAACmB,MAAM,IAAI,CAAC,IAAInB,KAAK,CAACmB,MAAM,IAAI,CAAC,EAAE;QAC1CJ,UAAU,CAACjB,KAAK,CAACI,IAAI,GAAG,CAAC,CAAC;MAC5B;IACF;EAAE,GACH,MAEO,CACL,CACL,CAAC;AAEP,CAAC;AAED,eAAeL,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}