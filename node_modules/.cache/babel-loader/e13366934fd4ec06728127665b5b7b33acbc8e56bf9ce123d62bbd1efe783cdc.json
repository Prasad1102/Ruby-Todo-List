{"ast":null,"code":"import React from \"react\";\nconst Paginate = ({\n  currentPage,\n  setCurrentPage,\n  fetchTodos\n}) => {\n  const totalPages = 3; // Replace this with your actual total pages\n\n  const changePage = page => {\n    setCurrentPage(page);\n    fetchTodos(); // Fetch todos for the new page\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changePage(Math.max(currentPage - 1, 1))\n  }, \"Prev\"), \"...\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      changePage(1);\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      changePage(2);\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      changePage(3);\n    }\n  }, \"3\"), \"...\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changePage(Math.min(currentPage + 1, totalPages))\n  }, \"Next\")));\n};\nexport default Paginate;\n\n// {[...Array(totalPages).keys()].map((page) => (\n//           <button key={page + 1} onClick={() => changePage(page + 1)}>\n//             {page + 1}\n//           </button>\n//         ))}","map":{"version":3,"names":["React","Paginate","currentPage","setCurrentPage","fetchTodos","totalPages","changePage","page","createElement","Fragment","onClick","Math","max","min"],"sources":["/home/prasad/Ruby/BlogApp/app/javascript/components/Todos/Paginate.jsx"],"sourcesContent":["import React from \"react\";\n\nconst Paginate = ({ currentPage, setCurrentPage, fetchTodos }) => {\n  const totalPages = 3; // Replace this with your actual total pages\n\n  const changePage = (page) => {\n    setCurrentPage(page);\n    fetchTodos(); // Fetch todos for the new page\n  };\n\n  return (\n    <>\n      <div>\n        <button onClick={() => changePage(Math.max(currentPage - 1, 1))}>\n          Prev\n        </button>\n        ...\n        <button\n          onClick={() => {\n            changePage(1);\n          }}\n        >\n          1\n        </button>\n        <button\n          onClick={() => {\n            changePage(2);\n          }}\n        >\n          2\n        </button>\n        <button\n          onClick={() => {\n            changePage(3);\n          }}\n        >\n          3\n        </button>\n        ...\n        <button\n          onClick={() => changePage(Math.min(currentPage + 1, totalPages))}\n        >\n          Next\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Paginate;\n\n// {[...Array(totalPages).keys()].map((page) => (\n//           <button key={page + 1} onClick={() => changePage(page + 1)}>\n//             {page + 1}\n//           </button>\n//         ))}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,WAAW;EAAEC,cAAc;EAAEC;AAAW,CAAC,KAAK;EAChE,MAAMC,UAAU,GAAG,CAAC,CAAC,CAAC;;EAEtB,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3BJ,cAAc,CAACI,IAAI,CAAC;IACpBH,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,oBACEJ,KAAA,CAAAQ,aAAA,CAAAR,KAAA,CAAAS,QAAA,qBACET,KAAA,CAAAQ,aAAA,2BACER,KAAA,CAAAQ,aAAA;IAAQE,OAAO,EAAEA,CAAA,KAAMJ,UAAU,CAACK,IAAI,CAACC,GAAG,CAACV,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC;EAAE,GAAC,MAEzD,CAAC,OAET,eAAAF,KAAA,CAAAQ,aAAA;IACEE,OAAO,EAAEA,CAAA,KAAM;MACbJ,UAAU,CAAC,CAAC,CAAC;IACf;EAAE,GACH,GAEO,CAAC,eACTN,KAAA,CAAAQ,aAAA;IACEE,OAAO,EAAEA,CAAA,KAAM;MACbJ,UAAU,CAAC,CAAC,CAAC;IACf;EAAE,GACH,GAEO,CAAC,eACTN,KAAA,CAAAQ,aAAA;IACEE,OAAO,EAAEA,CAAA,KAAM;MACbJ,UAAU,CAAC,CAAC,CAAC;IACf;EAAE,GACH,GAEO,CAAC,OAET,eAAAN,KAAA,CAAAQ,aAAA;IACEE,OAAO,EAAEA,CAAA,KAAMJ,UAAU,CAACK,IAAI,CAACE,GAAG,CAACX,WAAW,GAAG,CAAC,EAAEG,UAAU,CAAC;EAAE,GAClE,MAEO,CACL,CACL,CAAC;AAEP,CAAC;AAED,eAAeJ,QAAQ;;AAEvB;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}